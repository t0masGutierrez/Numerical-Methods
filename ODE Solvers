{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Numerical Methods Week 3: Built-in Python ODE Solvers\n","### written by CRANE Co-leads\n","\n","Reminder: [Code of conduct](https://docs.google.com/presentation/d/1UiBbQLGCZ_8VTTufJGitjnfz2Lj12TzAPuvHLvRLMhk/edit?usp=sharing)\n","\n","\n","\n","---"],"metadata":{"id":"U2RfKUmdXQEM"}},{"cell_type":"markdown","source":["Welcome back, students! Now that you know what Runge Kutta is and how to code it yourself, let's try using the built-in Python tools that utilize this method and others!\n","\n","<br>\n","\n","##**Goals**:\n","\n","*   Writing Modular Code\n","*   Understanding Python library documentation\n","*   Learn how to use pre-built ordinary differential equation (ODE) solvers for faster and more accurate results\n","\n","<br>\n"],"metadata":{"id":"mtXOvc9ZjNDi"}},{"cell_type":"markdown","source":["#Using built-in Python Functions to solve ordinary differential equations (ODE)\n","\n","Let's use the SciPy library (scientific computing library) to solve an ordinary differential equation (ODE). We will mostly be using the [**`solve_ivp`**](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.solve_ivp.html) function within SciPy, where \"ivp\" stands for **initial value problem**.\n","\n","</br>\n","\n","**An *initial value problem* is a problem where we know the equations of motion and the starting point for the system. This is a very common numerical problem in physics.** Python comes with a few ways to easily solve initial value problems, but here we'll use the `scipy.integrate.solve_ivp` function. `solve_ivp` allows us to choose from many numerical integrators and ODE solvers such as the [trapezoid method](https://en.wikipedia.org/wiki/Trapezoidal_rule) for integration, and higher order Runge Kutta methods (i.e. RK45).\n","\n","<br>\n","\n","**`solve_ivp`** is designed to solve equations of the form\n","&nbsp;\n","\n","$$\\begin{align}\n","\\frac{dy}{dt} = f(t,y)\n","\\end{align}$$\n","\n","&nbsp;\n","\n","where $y$ can be a vector of several variables, such as ($x$, $y$, $v_x$, $v_y$). When solving an initial value problem, we start with both an ODE (the equation above) and an initial data point (```t0```,```y0```) to solve from.\n","\n","</br>\n","\n","To solve, you need to write a function (```fun```)\n",", specify a time range to solve the equations over (a starting time (```t0```) and ending time (```tf```)), and pick the initial conditions ```y0``` (the values of y at ```t0```).\n","\n","The below code imports the `solve_ivp` function, uses `solve_ivp` to get $y$, and then stores the solutions for $t$ and $y$ into two different arrays.\n","\n","```\n","from scipy.integrate import solve_ivp\n","results = solve_ivp(fun, (t0, tf), y0, method='RK45')\n","t = results.t\n","y = results.y\n","```\n","\n","Here, the last two lines have gotten arrays for the solution of t and y, and can be used to plot the results. `solve_ivp` returns the solutions to variable $t$ and $y$ into one variable `results`. To unpack these solutions, we use `t = results.t` for example. **Remember that y is usuall a vector, so it will be an array of multiple values.**\n","\n","<br>\n","\n","If your function has any extra arguments, you can include them using the `solve_ivp` ```args``` option.\n","```\n","#e.g. if your function (fun) has the arguments (t, y, A, B, C), initial condition (y0), and start/end times (t0 and tf), you could use\n","results = solve_ivp(fun, (t0, tf), y0, method='RK45', args=(A,B,C))\n","```\n","$\\tag{0}$\n","\n","The code is structured this way so you can apply it to any problem in a general way.To understand more about the options `solve_ivp` has, see the coding documentation here: https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.solve_ivp.html\n","\n","Getting familiar with documentation like this is very important to using new python functions!\n","\n","\n","It is good to have underlying knowledge of the algorithms and tools you need to solve problems. This knowledge allows you to use these ready-to-use tools to their full extent. **These built-in functions have many more options and are capable of solving much more difficult problems but require you to know the lingo and understand the underlying mechanisms.** Now let's do an actual example!\n","\n","\n","<br>"],"metadata":{"id":"G6WwXiu2izIk"}},{"cell_type":"markdown","source":["\n","\n","\n","#Lets get started solving a differential equation using ```solve_ivp```.\n","\n","\n","First, import ```solve_ivp``` and ```constants``` with our usual ```numpy``` and ```matplotlib```."],"metadata":{"id":"Je5bWAAiizKa"}},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from scipy.integrate import solve_ivp\n","from scipy import constants as CONSTANTS"],"metadata":{"id":"a3EU3o2Rmi1J","executionInfo":{"status":"ok","timestamp":1741470587528,"user_tz":360,"elapsed":42,"user":{"displayName":"Tomas","userId":"09314415480168799529"}}},"execution_count":350,"outputs":[]},{"cell_type":"markdown","source":["##Project 1: Use SciPy `solve_ivp()` function to solve the driven-damped oscillator equation\n","\n","A great example of a driven-damped harmonic oscillator is a child being pushed on a swing. Air resistance (drag) will slow them down, so to keep them going we drive them by pushing!\n","\n","<p align=\"center\">\n","  <img width=\"300\" src=\"https://img1.picmix.com/output/stamp/normal/3/5/9/2/1572953_d54a8.gif\">\n","</p>\n","\n","The force F of in our driven-damped oscillator equation is:\n","\n","$$\\begin{align}\n","F &= -k\\: ( x - x_{eq}) + \\beta v + A\\: cos(\\omega t) \\\\\n","ma &=\n","\\tag{1}\n","\\end{align}$$\n","\n","<br>\n","\n","Where '$\\beta$' is our drag term, and '$A\\:cos(\\omega t)$' is an oscillating driving force with amplitude '$A$' and frequency '$\\omega$'.\n","\n","<br>\n","\n","To make this easier to solve, lets make this equation in terms of only x and t. Remember Newton's Law: $F=ma$, and that $a = dv/dt$. This gives us\n","\n","<br>\n","\n","$$\\begin{align}\n","\\frac{d v}{dt} = -\\frac{k}{m}\\: ( x - x_{eq}) + \\frac{\\beta}{m} v + \\frac{A}{m}\\: cos(\\omega t)\n","\\tag{2}\n","\\end{align}$$\n","\n","we also know\n","\n","$$\\begin{align}\n","\\frac{d x}{dt} = v\n","\\tag{3}\n","\\end{align}$$\n","\n","<br>\n","\n","Click on the [**solve_ivp**](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.solve_ivp.html) link to documentation and read through how to use it. Use Google to find examples on how to run the function. As computational scientists, it is important for you to learn how to read documentation and practice your google skills in order to use new algorithms.\n","\n","For example, googling \"scipy solve_ivp examples\" gives this link: https://pundit.pratt.duke.edu/wiki/Python:Ordinary_Differential_Equations\n","\n","<br>\n","\n","<br>\n","<br>\n","\n","Now, lets solve this problem using the 'RK45' method and the following constants:\n","\n","$$k = 1.0$$\n","\n","$$m = 1.0$$\n","\n","$$x_{eq} = 1.0$$\n","\n","$$\\beta = -0.25$$\n","\n","$$A = 2.0$$\n","\n","$$\\omega = 2.0$$\n","\n","\n","First, lets make a function for this damped driven oscillator equation, called `drivenf`. Use equations (2) and (3) to write `drivenf`. This is a function that will return $dx/dt$ and $dv/dt$ for a given time, position and velocity:\n","\n","NOTE: solve_ivp requires that the variables for the function you're solving ($x$ and $v$) are packed together (into $X$). So the input to `drivenf`, $X$, contains both $x$ and $v$."],"metadata":{"id":"Q2jzDWuLzfIU"}},{"cell_type":"code","source":["def drivenf(t, X):\n","  \"\"\" Function for damped driven oscillator equation. Returns array containing\n","  velocity (dx/dt) and acceleration (dv/dt), given time, position, and velocity inputs.\n","  Arguments:\n","    t - time\n","    X - array containing x and v\n","  \"\"\"\n","  # constants\n","  k = 1\n","  m = 1\n","  xeq = 1\n","  beta = -0.25\n","  A = 2\n","  omega = 2\n","\n","  # TODO: add code for our damped-driven oscillator equation\n","  dxdt = X[1]\n","  dvdt = -k/m * (X[0] - xeq) + beta/m * X[1] + A/m * np.cos(omega * t)\n","\n","  return [dxdt,dvdt]"],"metadata":{"id":"qHmuhpcKEX5C","executionInfo":{"status":"ok","timestamp":1741470587529,"user_tz":360,"elapsed":2,"user":{"displayName":"Tomas","userId":"09314415480168799529"}}},"execution_count":351,"outputs":[]},{"cell_type":"markdown","source":["Now, with our `drivenf` function, lets use the RK45 option in `solve_ivp` to solve the initial value problem `(x0, v0)=(2.0, 0.0)`. Review the documentation for `solve_ivp` to understand how the function works: https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.solve_ivp.html\n","\n","See Lecture Notes for Part 2c for a description of how to use this documentation, and Equation (0) for a summary of the arguments.\n","\n","NOTE: Since the variables for `drivenf` ($x$ and $v$) are packed together (into X), we also need to pack the initial values for these variables together.  "],"metadata":{"id":"G7ToJlgiEkqd"}},{"cell_type":"code","source":["# start and stop times\n","t0 = 0\n","tf = 40\n","tSteps = np.arange(t0, tf)\n","\n","# initial values\n","x0 = 2.0\n","v0 = 0.0\n","#TODO: pack initial values together\n","X0 = [x0, v0]\n","\n","#TODO: enter arguments in solve_ivp to solve the drivenf equation\n","sol = solve_ivp(drivenf, [t0,tf], X0, max_step=0.01)"],"metadata":{"id":"nLzutkZD4GVQ","executionInfo":{"status":"ok","timestamp":1741470587897,"user_tz":360,"elapsed":356,"user":{"displayName":"Tomas","userId":"09314415480168799529"}}},"execution_count":352,"outputs":[]},{"cell_type":"markdown","source":["plot your results"],"metadata":{"id":"YgHHVmBqExt-"}},{"cell_type":"code","source":["fig,ax = plt.subplots()\n","ax.plot(sol.t, sol.y[0], label = 'RK45')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"53r5uGsbE1R0","colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"status":"ok","timestamp":1741470588038,"user_tz":360,"elapsed":141,"user":{"displayName":"Tomas","userId":"09314415480168799529"}},"outputId":"acd0a037-ce6a-4452-fbb4-9111d8dc73a3"},"execution_count":353,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["&nbsp;\n","&nbsp;\n","-------\n","#**PAUSE HERE AND TAKE A BREAK!**\n","-------\n","\n","&nbsp;"],"metadata":{"id":"kXPWspABbgu8"}},{"cell_type":"markdown","source":["##  Problem 2: Solve Kepler's problem using \"Radau\" in `solve_ivp()`"],"metadata":{"id":"mfNX7CPgja5g"}},{"cell_type":"markdown","source":["Another great example of a system to solve is an orbit! We will be proving Kepler's first law numerically at the end.\n","\n","<p align=\"center\">\n","  <img width=\"300\" src=\"https://qph.cf2.quoracdn.net/main-qimg-c56f163dc353d14e09796cb150f2b695\">\n","</p>\n","\n","<br>\n","\n","Let's consider two celestial bodies, maybe a star with a planet orbiting it. The force on a body of mass $m$ at distance $\\boldsymbol{\\mathrm{r}}$ from a body of mass $M$ at the origin is given by Newton's law\n","\n","<br>\n","$$\\begin{align}\n","\\boldsymbol{\\mathrm{F}}= -\\frac{GMm}{\\left|\\boldsymbol{r}\\right|^3}\\vec{r}\n","\\tag{4}\n","\\end{align}$$\n","\n","<br>\n","\n","In two dimensions, where $\\boldsymbol{\\vec{r}}=x\\boldsymbol{\\hat{\\imath}} + y \\boldsymbol{\\hat{\\jmath}}$ and $|\\boldsymbol{r}|=\\sqrt{x^2 + y^2}$, the components of the acceleration $\\boldsymbol{\\mathrm{a}}=a_x \\boldsymbol{\\hat{\\imath}} + a_y \\boldsymbol{\\hat{\\jmath}}$ are given by\n","\n","<br>\n","\n","$$\\begin{align}\n"," a_x = \\frac{\\mathrm{d}v_x}{\\mathrm{d}t} = - \\frac{GMx}{\\left(x^2 + y^2\\right)^{3/2}},\\quad a_y = \\frac{\\mathrm{d}v_y}{\\mathrm{d}t} = - \\frac{GMy}{\\left(x^2 + y^2\\right)^{3/2}}\n","\\tag{5}\n","\\end{align}$$\n","\n","<br>\n","\n","\n","As with the previous exercise, we have to provide the function with three arguments to work (see <a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.solve_ivp.html#scipy.integrate.solve_ivp\">the documentation</a> for more). The first argument is a function $\\boldsymbol{\\mathrm{F}}(t,\\boldsymbol{\\mathrm{X}})$ which 'updates' the system, this is where the equations of motion are set. This function must take the time, and a *state vector* (for us, position and velocity), and then return the time derivative of the state vector's components. We'll call our state vector $\\boldsymbol{\\mathrm{X}}$, which just holds the current $x$ and $v$ of the planet. **This time, since we are interested in both the x and y coordinates, we will have two variables for each quantity we track**:\n","\n","<br>\n","$$ \\boldsymbol{\\mathrm{X}} = \\left(x, y, v_x, v_y\\right) $$\n","\n","<br>\n","\n","So it follows that the function $\\boldsymbol{\\mathrm{F}}(t,\\boldsymbol{\\mathrm{X}})$ must return\n","\n","$$ \\boldsymbol{\\mathrm{F}}(t,\\boldsymbol{\\mathrm{X}}) = \\left(\\: v_x(t), v_y(t), a_x(t), a_y(t) \\: \\right)$$\n","\n","<br>\n","\n","The first two components are simply the last two components in the input. The last two components can be calculated from the acceleration equations above. The other arguments that `scipy.integrate.solve_ivp` requires is the initial state of the system $\\boldsymbol{\\mathrm{X}}_0$ and the time span over which to solve the equations.\n","\n","<br>\n","\n","A few tips:\n","- You must set the <samp>method</samp> argument of <samp>solve_isp</samp> to <samp>\"Radau\"</samp> to get a stable solution.\n","- Set the aregument <samp>t_eval</samp> to an array of time coordinates and the function will find $\\boldsymbol{\\mathrm{X}}$ at those time coordinates.\n","- The output of solve_ivp is such that  $(x, y, v_x, v_y)$ values are stored in array at <samp>result.y</samp> for `result = solve_ivp(...)`"],"metadata":{"id":"RP8hg0Lim2WD"}},{"cell_type":"markdown","source":["First let's setup the constants we’ll use throughout the problem. It’s best practice to name constants in ```ALL_CAPS```. In this context, we mean that constants are variables you would never change the value of. For example,  $\\pi = 3.14$."],"metadata":{"id":"Em4BRb7Rp2D0"}},{"cell_type":"code","execution_count":354,"metadata":{"id":"HF_T8zvUisgt","executionInfo":{"status":"ok","timestamp":1741470588039,"user_tz":360,"elapsed":1,"user":{"displayName":"Tomas","userId":"09314415480168799529"}}},"outputs":[],"source":["M_EARTH = 5.972E24   # Mass of the earth\n","M_SUN = 1.98847E30   # Mass of the sun\n","\n","AU = CONSTANTS.astronomical_unit #Distance from the sun to the earth\n","PI = CONSTANTS.pi\n","GRAV = CONSTANTS.gravitational_constant\n","YEAR = CONSTANTS.year"]},{"cell_type":"markdown","source":["<br>\n","\n","To solve the problem numerically, let's start the solver with a body at $x=1\\,AU= 1.5*10^{11}$ m, $y=0$ and an initial velocity $35 *10^3$ m/s in the positive $y$ direction. We will later plot the $x$ and $y$ values and you should see an elliptical orbit. Make sure you run the simulation over a sensible time-scale, e.g. a few years."],"metadata":{"id":"gG0xjR1m_xap"}},{"cell_type":"code","source":["# Initial state vector for the planet\n","# X0 = (x0, y0, vx0, vy0)\n","X0 = np.array([AU, 0.0, 0.0, 35.0E3])\n","\n","# Length of time to evaluate for in years\n","n_years = 22\n","\n","# Time points at which to evaluate (using 100 points/year)\n","t0 = 0.0\n","tf = n_years *YEAR\n","t_eval = np.linspace(0.0, tf, int(n_years * 100))"],"metadata":{"id":"bc2FRerel6_-","executionInfo":{"status":"ok","timestamp":1741470588040,"user_tz":360,"elapsed":1,"user":{"displayName":"Tomas","userId":"09314415480168799529"}}},"execution_count":355,"outputs":[]},{"cell_type":"markdown","source":["### Task 1: Define function to calculate velocity and acceleration in an orbiting body using equation (5) above"],"metadata":{"id":"vubkEVXU6HgF"}},{"cell_type":"code","source":["def orbit_eqn(t, X):\n","  \"\"\" Solves for acceleration using Kepler's equations\n","    Arguments:\n","    t - time\n","    X - array containing x, y, vx, vy\n","  \"\"\"\n","  # TODO: Get coordinates and velocity from input X\n","  x, y, vx, vy = X\n","\n","  # TODO: Use equation (5) to calculate each component of acceleration\n","  dvxdt = -GRAV * M_SUN * x * (x **2 + y ** 2) ** (-3/2)\n","  dvydt = -GRAV * M_SUN * y * (x **2 + y ** 2) ** (-3/2)\n","  dxdt = vx\n","  dydt = vy\n","\n","  return [dxdt, dydt, dvxdt, dvydt]"],"metadata":{"id":"yj2s7vCk6gvH","executionInfo":{"status":"ok","timestamp":1741470588046,"user_tz":360,"elapsed":6,"user":{"displayName":"Tomas","userId":"09314415480168799529"}}},"execution_count":356,"outputs":[]},{"cell_type":"markdown","source":["###Task 2: Use solve_ivp to solve the equations\n","\n","Remember to use t_eval above, and set the method to 'Radau'\n","\n","Show the difference in how the trajectory looks when solving the problem using **Radau** vs **RK45** after 10+ years"],"metadata":{"id":"Cspjiyla7PM5"}},{"cell_type":"markdown","source":["#### Why **Radau**? Why not RK45?\n","\n","The **RK45** method is an **Explicit** method as mentioned in the documentation.\n","\n","The **Radau** Method is an **Implicit** method as mentioned in the documentation.\n","\n","Information on the differences can be found here: https://en.wikipedia.org/wiki/Explicit_and_implicit_methods\n","\n","</br>\n","\n","The main difference is that **Explicit** methods solve the next time step using the current or previous time steps in the Force function $\\boldsymbol{\\mathrm{F}}(t,\\boldsymbol{\\mathrm{X}})$ and the next (future) time step on the left-hand-side of the equation.\n","\n","</br>\n","\n","**Implicit** methods use the next (future) time step along with the the current or previous time steps in the Force function $\\boldsymbol{\\mathrm{F}}(t,\\boldsymbol{\\mathrm{X}})$.\n","\n","</br>\n","\n","This means that **Explicit** methods such as **RK45** are much easier and faster to solve (and code). However, their error will accumulate and become larger as time progresses because they are dependent on how accurate the previous steps' solution was. Therefore, the accuracy of your solution depends on how many and how small steps you take!\n","\n","On the other hand, **Implicit** methods can be **unconditionally stable** allowing you get an accurate solution without dependence on how long the simulation is or how small the time steps are. However, they highly depend on the initial conditions and initial guess of the solution!\n","\n","</br>"],"metadata":{"id":"lp-2ckq7S-NH"}},{"cell_type":"code","source":["# TODO: Use solve_ivp to solve orbit_eqn using our initial conditions X0\n","solution = solve_ivp(orbit_eqn, [t0, tf], X0, t_eval=t_eval, method = \"Radau\")\n","\n","\n","# Get the solution arrays\n","x, y, vx, vy = solution.y"],"metadata":{"id":"UOu3TAiq7f4i","executionInfo":{"status":"ok","timestamp":1741470588195,"user_tz":360,"elapsed":148,"user":{"displayName":"Tomas","userId":"09314415480168799529"}}},"execution_count":357,"outputs":[]},{"cell_type":"code","source":["# Plot the orbit\n","fig, ax = plt.subplots(figsize=[6, 6])\n","ax.plot(x / AU, y / AU, label='Orbit Trajectory')\n","\n","ax.plot([0.0], [0.0], 'o', label='Star')\n","ax.set(xlabel='$x$ (AU)', ylabel='$y$ (AU)', xlim=[-3, 3], ylim=[-3, 3])\n","ax.legend()\n","plt.savefig('./kepler_example_orbit.pdf')\n","plt.show()"],"metadata":{"id":"Bu6QZh1xJwdk","colab":{"base_uri":"https://localhost:8080/","height":549},"executionInfo":{"status":"ok","timestamp":1741470588477,"user_tz":360,"elapsed":281,"user":{"displayName":"Tomas","userId":"09314415480168799529"}},"outputId":"444d4a80-03e4-483e-fba6-610f179c03cd"},"execution_count":358,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##The lesson ends here! See below for an additional info and a practice problem."],"metadata":{"id":"0wnqv3Ml2rBl"}},{"cell_type":"markdown","source":["##Extra: Kepler's First Law\n","\n","Kepler's First Law states that\n","\n","> All planets move in elliptical orbits, with the sun at one focus.\n","\n","Now check if the orbit is elliptical. The equation of an ellipse is\n","$$ \\frac{x^2}{a^2} + \\frac{y^2}{b^2} = 1 $$\n","where $a$ and $b$ are the semi-minor and semi-major axes respectively. What are $a$ and $b$ for this orbit? The below figure shows what the orbit should look like.\n","\n","<p align=\"center\">\n","  <img width=\"400\" src=\"https://cdn.shopify.com/s/files/1/0093/2298/7617/files/Screenshot_2024-01-05_at_12.24.32_PM_1024x1024.png?v=1704417889\">\n","</p>\n","\n","We will rearrange the above to something that looks like the equation for a straight line and fit to find $a$ and $b$. The $x$ and $y$ in the equation are centred  on the centre of the ellipse but our data is centred on the sun (the ellipse's focus). Make sure to shift your data (only necessary in $x$) to the centre."],"metadata":{"id":"hS2CtO50DoIb"}},{"cell_type":"markdown","source":["To find $a$ and $b$ we need to fit to something that looks like a line $v=mu+c$. We rearrange to get $y^2=b^2−\\frac{b^2}{a^2}x^2$,\n","so if we fit to $v=y^2$ and $u=x^2$ we′ll find $b=\\sqrt{c}$ and $a=\\sqrt{-c/m}$.\n","This is okay because $m$ is negative.\n","\n","We must also shift the coordinates so that the origin is the centre of the ellipse, not the sun (the focus of the ellipse). We find the x coordinate of the centre by finding the x coordinate where y is maximum."],"metadata":{"id":"mhE52aFsoWNJ"}},{"cell_type":"code","source":["# Prepare the data\n","v = y ** 2\n","u = (x - x[np.argmax(y)]) ** 2"],"metadata":{"id":"BAm6RZwAoSYs","executionInfo":{"status":"ok","timestamp":1741470588480,"user_tz":360,"elapsed":1,"user":{"displayName":"Tomas","userId":"09314415480168799529"}}},"execution_count":359,"outputs":[]},{"cell_type":"code","source":["# Perform the fit\n","m, c = np.polyfit(u, v, 1)"],"metadata":{"id":"ZPp4Sr0Pp_U0","executionInfo":{"status":"ok","timestamp":1741470588481,"user_tz":360,"elapsed":0,"user":{"displayName":"Tomas","userId":"09314415480168799529"}}},"execution_count":360,"outputs":[]},{"cell_type":"code","source":["# Getting a and b, in units of AU\n","print(\"a=%.2f AU, b=%.2f AU\" % (np.sqrt(- c / m) / AU, np.sqrt(c) / AU))\n","a, b = np.sqrt(- c / m) / AU, np.sqrt(c) / AU"],"metadata":{"id":"10YbdGgUqAdf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1741470588498,"user_tz":360,"elapsed":12,"user":{"displayName":"Tomas","userId":"09314415480168799529"}},"outputId":"bfe8af44-3ada-4667-e011-2a2d0e15fbb8"},"execution_count":361,"outputs":[{"output_type":"stream","name":"stdout","text":["a=1.61 AU, b=1.49 AU\n"]}]},{"cell_type":"markdown","source":["The elliptical orbit for the Kepler's law"],"metadata":{"id":"sOZSmREXBkqJ"}},{"cell_type":"code","source":["# Plot the orbit\n","fig, ax = plt.subplots(figsize=[6, 6])\n","ax.plot(x / AU, y / AU, label='Orbit Trajectory')\n","\n","# Add the semi-minor/major axes as a check\n","ax.plot([x.max() / AU - a, x.max() / AU], [0.0, 0.0], label='$a$')\n","ax.plot([x.max() / AU - a, x.max() / AU - a], [0.0, b], label='$b$')\n","\n","ax.plot([0.0], [0.0], 'o', label='Star')\n","ax.set(xlabel='$x$ (AU)', ylabel='$y$ (AU)', xlim=[-3, 3], ylim=[-3, 3])\n","ax.legend()\n","plt.savefig('./kepler_example_orbit.pdf')\n","plt.show()"],"metadata":{"id":"m-wtjCcbqDGF","colab":{"base_uri":"https://localhost:8080/","height":549},"executionInfo":{"status":"ok","timestamp":1741470588908,"user_tz":360,"elapsed":409,"user":{"displayName":"Tomas","userId":"09314415480168799529"}},"outputId":"c3a722cc-1466-4e29-df57-955df5b4815e"},"execution_count":362,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAh8AAAIUCAYAAAC6mk4SAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAARjpJREFUeJzt3Xd0VHXCxvFnSA8hoQVCaAlFOhHp6ApIB1FsYAUUEVjcXRcboIDoQlARsQKrSPRVAQtgQbpSVEooAZEOCQQQCC2hJpDM+4c666SRmczcO5P5fs6Zc+69c+fOkzEyT363WaxWq1UAAAAGKWV2AAAA4FsoHwAAwFCUDwAAYCjKBwAAMBTlAwAAGIryAQAADEX5AAAAhqJ8AAAAQ1E+AACAoSgfAADAUF5bPqZNm6amTZsqPDxc4eHhatu2rRYtWmR2LAAAcA0Wb723yzfffCM/Pz/VrVtXVqtVH374oV599VVt2bJFjRo1MjseAAAogNeWj/yUL19er776qgYNGmR2FAAAUAB/swO4QnZ2tj7//HNduHBBbdu2LXC9zMxMZWZm2uZzcnJ0+vRpVahQQRaLxYioAACUCFarVefOnVN0dLRKlXLsKA6vLh+//PKL2rZtq8uXLyssLEzz589Xw4YNC1w/Pj5e48ePNzAhAAAlW2pqqqpVq+bQa7x6t0tWVpYOHTqk9PR0ffHFF3r//fe1atWqAgtI7pGP9PR01ahRQ6mpqQoPDzcqNgAAXi8jI0PVq1fX2bNnFRER4dBrvbp85Na5c2fVrl1bM2bMKNL6GRkZioiIUHp6OuUDAAAHFOc71GtPtc1PTk6O3cgGAADwPF57zMeoUaPUo0cP1ahRQ+fOndOnn36qlStXasmSJWZHAwAAhfDa8nHixAn1799fv/32myIiItS0aVMtWbJEXbp0MTsaAAAohNeWj5kzZ5odAQAMl52drStXrpgdAz7Az89P/v7+brkUhdeWDwDwNefPn9fhw4dVgs4TgIcLDQ1VlSpVFBgY6NLtUj4AwAtkZ2fr8OHDCg0NVWRkJBdGhFtZrVZlZWUpLS1NycnJqlu3rsMXEisM5QMAvMCVK1dktVoVGRmpkJAQs+PAB4SEhCggIEAHDx5UVlaWgoODXbbtEnWqLQCUdIx4wEiuHO2w265btgoAAFAAygcAADAU5QMA4LFSUlJksViUlJRU4DorV66UxWLR2bNnDctVkBdeeEHXX3+92TE8HuUDAOBWqampeuSRRxQdHa3AwEDVrFlT//rXv3Tq1CmXbL9du3a2C05KUkJCgsqWLVvoazp06CCLxVLgo0OHDk5leeqpp7RixQqnXpufklpmONsFAOA2Bw4cUNu2bXXddddp9uzZio2N1a+//qqnn35aixYt0rp161S+fPl8X5uVlVWk9wgMDFRUVJRDuebNm2fbfmpqqlq1aqXly5erUaNGtm3+1ZUrVxQQEHDN7YaFhSksLMyhLEbIyspy+bU6ioORDwDwQlarVRezrprycOQiZ8OHD1dgYKCWLl2q9u3bq0aNGurRo4eWL1+uI0eO6LnnnrOtGxMTo5deekn9+/dXeHi4HnvsMdtzu3btUrt27RQcHKzGjRtr1apVtuf+uttl5cqVevjhh5Wenm4bxXjhhRfy5CpfvryioqIUFRWlyMhISVKFChVsyypUqKBp06bptttuU+nSpTVhwgRlZ2dr0KBBio2NVUhIiOrVq6c33njDbrv5jVS8//77atCggYKDg1W/fn29++67ds8fPnxY9913n8qXL6/SpUurRYsWWr9+vRISEjR+/Hht3brV9rMkJCRIkg4dOqTbb79dYWFhCg8PV9++fXX8+PE8Od5//33FxsYqODhYH330kSpUqJDnBqx9+vTRQw89dO3/mC7EyAcAeKFLV7LVcKw5N9Lc8WI3hQZe++vj9OnTWrJkiSZMmJDn2iRRUVF64IEHNHfuXL377ru2U4gnT56ssWPHaty4cXbrP/3005o6daoaNmyoKVOmqHfv3kpOTlaFChXs1mvXrp2mTp2qsWPHavfu3ZLk9EjECy+8oEmTJmnq1Kny9/dXTk6OqlWrps8//1wVKlTQzz//rMcee0xVqlRR3759893GJ598orFjx+rtt99Ws2bNtGXLFg0ePFilS5fWgAEDdP78ebVv315Vq1bV119/raioKG3evFk5OTnq16+ftm/frsWLF2v58uWSpIiICOXk5NiKx6pVq3T16lUNHz5c/fr108qVK23vvW/fPn355ZeaN2+e/Pz8VLduXf3zn//U119/rXvuuUfS7/dJW7hwoZYuXerUZ+QsygcAwC327t0rq9WqBg0a5Pt8gwYNdObMGaWlpalSpUqSpFtuuUVPPvmkbZ2UlBRJ0uOPP6677rpLkjRt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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["We used this reference: https://pyproblems.github.io/book/mech3Q.html"],"metadata":{"id":"pQfr0gcXA_ew"}},{"cell_type":"markdown","source":["# Homework problem! Project 3: Varying Mass, Rocket Problem. Let's go to the moon!\n","\n","<p align=\"center\">\n","  <img width=\"400\" src=\"https://airandspace.si.edu/sites/default/files/images/editoral-stories/thumbnails/hidden-figures-poster.jpg\">\n","</p>"],"metadata":{"id":"9_R2jFrpjgNd"}},{"cell_type":"markdown","source":["## Who's that rocket??\n","\n","\n","\n","\n","<p align=\"center\">\n","  <img width=\"400\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/Apollo_11_Launch_-_GPN-2000-000630.jpg/1200px-Apollo_11_Launch_-_GPN-2000-000630.jpg\">\n","</p>\n","\n","\n","\n","You, guessed it! It's the Saturn V rocket. (Used for the Apollo missions)"],"metadata":{"id":"OtBU1D_kuOeD"}},{"cell_type":"markdown","source":["Getting something to leave Earth's gravity is very difficult. However, we can calcaulte how to do it! Our forces at play are"],"metadata":{"id":"JMzKzTWygrjf"}},{"cell_type":"markdown","source":["$$\\begin{align}\n","\\bar{F}_{net} = \\bar{F}_{thrust} +\\bar{F}_{drag}+ \\bar{F}_{gravity}\n","\\tag{6}\n","\\end{align}$$\n","\n","or\n","\n","$$\\begin{align}\n","m(t)\\frac{d\\bar{v}}{dt} = \\bar{F}_{T}(t) +\\bar{F}_{D}(|\\bar{v}|)+ \\bar{F}_{G}(\\bar{r},t)\n","\\tag{7}\n","\\end{align}$$\n","\n","Thrust:\n","\n","$$\\begin{align}\n","\\bar{F}_{T}(t) =  -g_0 I_{sp} \\frac{d m}{dt} \\hat{v} (t<I_{sp})\n","\\tag{7}\n","\\end{align}$$\n","\n","Drag:\n","\n","$$\\begin{align}\n","\\bar{F}_{D}(|\\bar{v}|) = -\\beta |\\bar{v}|^2 \\hat{v}\n","\\tag{7}\n","\\end{align}$$\n","\n","\n","Gravitational:\n","\n","$$\\begin{align}\n","\\bar{F}_{G}(\\bar{r},t) = m(t) \\: g(r)\\cdot \\hat{r}\n","\\tag{7}\n","\\end{align}$$\n","\n","Where (under the assumption that the burning rate of fuel is constant)\n","\n","$$\\begin{align}\n","g(\\bar{r}) = \\frac{G\\: M_E}{|r|^2}\n","\\tag{7}\n","\\end{align}$$\n","\n","$$\\begin{align}\n","m(t) = m_0 - t\\cdot \\frac{d m}{dt}  \n","\\tag{7}\n","\\end{align}$$\n","\n","$$\\begin{align}\n","\\frac{d m}{dt} = \\frac{|\\bar{F}_{thrust}|}{g_0\\cdot I_{sp}}\n","\\tag{7}\n","\\end{align}$$"],"metadata":{"id":"vNOTeopKJ6Ss"}},{"cell_type":"markdown","source":["#Task: Solve the rocket eqution using \"Radau\" in solve_ivp"],"metadata":{"id":"c-GXUNkde-gY"}},{"cell_type":"code","source":["def Rocket(t,X):\n","  m0 = 10 #kg\n","  b = 0.2 * 5**2#30 #kg/m\n","  G = 6.674e-11 #N*m^2/kg^2\n","  RE = 6371000.0 #m\n","  ME = 5.972e24 #Kg\n","  g0 = 9.81 #m/s^2\n","\n","  #Thrust and Velocity of Fuel Expulsion\n","  Ft = 560000 #N\n","  Isp = 304 #s\n","  c = g0*Isp #m/s\n","\n","  # TODO: unpack X\n","  x, y, vx, vy, m = X\n","  r = np.sqrt(x**2 + y**2)\n","  rhatx = x/r\n","  rhaty = y/r\n","  vhatx = vx/np.sqrt(vx**2 + vy**2)\n","  vhaty = vy/np.sqrt(vx**2 + vy**2)\n","\n","  # functions\n","  mass = m0 - t * Ft * 1/(g0 * Isp)\n","  g = G * ME * 1/(r **2)\n","\n","  # If still have fuel left (at t=1 all fuel is expelled)\n","  if t<Isp:\n","\n","    #TODO: fill in the below\n","    dmdt = -Ft/c\n","    dxdt = vx\n","    dydt = vy\n","    dvxdt = (-g0 * Isp * dmdt * vhatx * 1/mass) + (-b * vx ** 2 * vhatx * 1/mass) + (mass * g * rhatx * 1/mass)\n","    dvydt = (-g0 * Isp * dmdt * vhaty * 1/mass) + (-b * vy ** 2 * vhaty * 1/mass) + (mass * g * rhaty * 1/mass)\n","\n","    #Hint for the dvydt and dvxdt: dvdt = -g*T0/vg - 1/(m0*z(t,n))*v**2 *np.sign(v) - 1/z(t, n) * dzdt(t, n)\n","\n","  # If out of fuel\n","  else:\n","\n","    dxdt = vx\n","    dydt = vy\n","    dvxdt = (-b * vx ** 2 * vhatx * 1/mass) + (mass * g * rhatx * 1/mass)\n","    dvydt = (-b * vy ** 2 * vhaty * 1/mass) + (mass * g * rhaty * 1/mass)\n","    dmdt = 0\n","\n","    #Hint for the dvydt and dvxdt: dvdt = -g*T0/vg - 1/(m0*z(t,n))*v**2 *np.sign(v) - 1/z(t, n) * dzdt(t, n)\n","\n","  # If accelerating downwards with negative speed while on the ground (can't go through ground)\n","\n","  if( np.dot(np.array([dvxdt,dvydt]),np.array([x,y])) <0 ):\n","    dxdt=0\n","    dvdt=0\n","  return [dxdt,dydt,dvxdt,dvydt,dmdt]"],"metadata":{"id":"mTB_13RtI8-V","executionInfo":{"status":"ok","timestamp":1741470588909,"user_tz":360,"elapsed":2,"user":{"displayName":"Tomas","userId":"09314415480168799529"}}},"execution_count":363,"outputs":[]},{"cell_type":"code","source":["tspan = np.linspace(0, 5000, 1000)\n","RE = 6371000.0 #m\n","x0 = 0.0\n","y0 = 1+RE\n","vx0 = 1\n","vy0 = 0.5\n","m0 = 46760\n","X0 = [x0,y0,vx0,vy0, m0]\n","\n","# TODO: Solve differential equation using solve_ivp\n","#(add code, [#add code], X0, t_eval=#add code, rtol = 1e-5, method='Radau')\n","sol = solve_ivp(Rocket, [0, 5000], X0, rtol=1e-5, method=\"Radau\")"],"metadata":{"id":"8oBfNog5I-Fv","executionInfo":{"status":"ok","timestamp":1741470589081,"user_tz":360,"elapsed":173,"user":{"displayName":"Tomas","userId":"09314415480168799529"}}},"execution_count":364,"outputs":[]},{"cell_type":"code","source":["plt.scatter(sol.y[0],sol.y[1])\n","plt.show()"],"metadata":{"id":"bXYp4EFIKlPK","colab":{"base_uri":"https://localhost:8080/","height":445},"executionInfo":{"status":"ok","timestamp":1741470589400,"user_tz":360,"elapsed":190,"user":{"displayName":"Tomas","userId":"09314415480168799529"}},"outputId":"1506d59c-8f26-47ab-9413-783b634719da"},"execution_count":365,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}